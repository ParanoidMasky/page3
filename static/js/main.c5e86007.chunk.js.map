{"version":3,"sources":["pages/login.js","components/cards.js","pages/home.js","pages/logout.js","pages/photos.js","pages/songs.js","pages/mind.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","mikhelaIsLogged","localStorage","getItem","state","username","password","onChange","bind","submitForm","e","this","setState","target","name","value","preventDefault","console","log","setItem","to","className","Form","onSubmit","Control","type","placeholder","Button","variant","Component","Cards","answer1","answer2","answer3","answer4","toPhotos","toGifts","toMind","toSongs","Container","Row","Card","style","width","Body","Title","Text","Home","Col","lg","Logout","removeItem","Photos","src","Songs","href","Mind","App","exact","path","component","logout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c5e86007.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const token = localStorage.getItem(\"token\")\r\n\r\n        let mikhelaIsLogged = true\r\n\r\n        if(token == null){\r\n            mikhelaIsLogged = false\r\n        }\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            mikhelaIsLogged\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.submitForm = this.submitForm.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault()\r\n        const { username, password } = this.state\r\n        \r\n        console.log(username)\r\n        console.log(password)\r\n\r\n        //login\r\n        if( username==\"Mikhela\" && password==\"0809\") {\r\n            localStorage.setItem(\"token\", \"mikhelaestaaqui11launicapersonaquepuede11tenermicorazon\")\r\n            this.setState({\r\n                mikhelaIsLogged: true\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.mikhelaIsLogged) {\r\n            return <Redirect to=\"/home-main\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h4>Para entrar a esta parte de mi corazón, necesito saber que eres la persona correcta...</h4>\r\n                <br/>\r\n                <Form onSubmit={this.submitForm}>\r\n                    <Form.Control type=\"text\" placeholder=\"Solo hay una persona que puede ver esto...\" name=\"username\" value={this.state.username} onChange={this.onChange} /> <br/>\r\n                    <Form.Control type=\"password\" placeholder=\"¿Qué fecha comenzó todo?...\" name=\"password\" value={this.state.password} onChange={this.onChange} /> <br/>\r\n                    <center> <Button className=\"send-btn\" variant=\"primary\" type=\"submit\">Acceder</Button> </center>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nexport default class Cards extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            answer1: '',\r\n            answer2: '',\r\n            answer3: '',\r\n            answer4: '',\r\n            toPhotos: false,\r\n            toGifts: false,\r\n            toMind: false,\r\n            toSongs: false,\r\n\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.submitForm = this.submitForm.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault()\r\n        const { answer1, answer2, answer3, answer4 } = this.state\r\n\r\n        if( this.state.answer1 == \"Cuervo\") {\r\n            console.log(\"a fotos\")\r\n            this.setState({\r\n                toPhotos: true\r\n            })\r\n        } if( this.state.answer2 === \"Ariel\") {\r\n            console.log(\"a regalos\")\r\n            this.setState({\r\n                toGifts: true\r\n            })\r\n            \r\n        } if(this.state.answer3 === \"Mavis\") {\r\n            console.log(\"a pensamientos\")\r\n            this.setState({\r\n                toMind: true\r\n            })\r\n        } if(this.state.answer4 === \"Fran\") {\r\n            console.log(\"a canciones\")\r\n            this.setState({\r\n                toSongs: true\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if( this.state.toPhotos ) {\r\n            return <Redirect to=\"/photos\" />\r\n        } if( this.state.toGifts) {\r\n            return <Redirect to=\"/gifts\" />\r\n        } if( this.state.toMind) {\r\n            return <Redirect to=\"/mind\" />\r\n        } if( this.state.toSongs) {\r\n            return <Redirect to=\"/songs\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"card-container\">\r\n                <center>\r\n                    <Container>\r\n                        <Row>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Body>\r\n                                    <Card.Title>Fotos de mi amor...</Card.Title>\r\n                                    <Card.Text>\r\n                                    Todas las fotos que mi corazón ha anhelado por tu belleza y perfección...\r\n                                    </Card.Text>\r\n                                    <Form onSubmit={this.submitForm}>\r\n                                    <Form.Control type=\"text\" placeholder=\"Mi animal favorito...\" name=\"answer1\" value={this.state.answer1} onChange={this.onChange} /> <br/>\r\n                                    <Button className=\"send-btn\" variant=\"primary\" type=\"submit\" >Ir a fotos</Button>\r\n                                    </Form>\r\n                                </Card.Body>\r\n                            </Card>\r\n                                <Card style={{ width: '18rem' }}>\r\n                                        <Card.Body>\r\n                                        <Card.Title>Los regalos que atesoro en mi corazón...</Card.Title>\r\n                                        <Card.Text>\r\n                                        Los regalos tan hermosos que me hacen muy feliz...\r\n                                        </Card.Text>\r\n                                        <Form onSubmit={this.submitForm}>\r\n                                            <Form.Control type=\"text\" placeholder=\"Nombre de nuestra futura hija...\" name=\"answer2\" value={this.state.answer2} onChange={this.onChange} /> <br/>\r\n                                            <Button className=\"send-btn\" variant=\"primary\" type=\"submit\">Ir a regalos</Button>\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                    <Card.Body>\r\n                                        <Card.Title>Mis pensamientos...</Card.Title>\r\n                                        <Card.Text>\r\n                                        Todo lo que hay dentro de mi mente para ti...\r\n                                        </Card.Text>\r\n                                        <Form onSubmit={this.submitForm}>\r\n                                            <Form.Control type=\"text\" placeholder=\"Personaje a la que más te pareces...\" name=\"answer3\" value={this.state.answer3} onChange={this.onChange} /> <br/>\r\n                                            <Button className=\"send-btn\" variant=\"primary\" type=\"submit\">Ir a pensamientos</Button>\r\n                                        </Form>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <Card style={{ width: '18rem' }}>\r\n                                        <Card.Body>\r\n                                            <Card.Title>Canciones que me hacen pensar en ti ...</Card.Title>\r\n                                                <Card.Text>\r\n                                                Quisiera cantartelas al oído...\r\n                                                </Card.Text>\r\n                                            <Form onSubmit={this.submitForm}>\r\n                                                <Form.Control type=\"text\" placeholder=\"Personaje que más amo que rolees...\" name=\"answer4\" value={this.state.answer4} onChange={this.onChange} /> <br/>\r\n                                                <Button className=\"send-btn\" variant=\"primary\" type=\"submit\">Ir a canciones</Button>\r\n                                            </Form>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                        </Row>\r\n                    </Container>\r\n                    <br/><br/>\r\n                    <Link to=\"/logout\"><Button className=\"send-btn\">Salir</Button></Link>\r\n                </center>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport Cards from '../components/cards'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const token = localStorage.getItem(\"token\")\r\n\r\n        let mikhelaIsLogged = true\r\n\r\n        if(token == null){\r\n            mikhelaIsLogged = false\r\n        }\r\n\r\n        this.state = {\r\n            mikhelaIsLogged\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        if(this.state.mikhelaIsLogged === false) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"2\"></Col>\r\n                    <Col lg=\"8\">\r\n                        <div className=\"home-body\">\r\n                            <center>\r\n                                <h1>Bienvenida a mi corazón amor..</h1>\r\n                                <p> Eres la única persona a quien dejaría entrar aquí </p>\r\n                                <p> He abierto un espacio muy especial para ti aqui, para que puedas ver todo lo que contiene...\r\n                                    pero para que funcione, deberás contestar unas preguntas para que puedas descubrirlo... </p> <br/> <br/>\r\n\r\n                                <Cards></Cards> <br/>\r\n                            </center>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"2\"></Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Logout extends Component {\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        localStorage.removeItem(\"token\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                <center>\r\n                    <h1> Has salido... </h1>\r\n                    <Link to=\"/login\"> Volver a iniciar sesión </Link>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Photos extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Galería de fotos</h1>\r\n                <img src=\"\"></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Songs extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h1>Canciones para dedicarle a mi universo...</h1>\r\n                <p> Todas las canciones que una vez te dediqué y significan mucho para mi por lo que me hacen pensar se encuentran aqui, eres libre de oirlas todas a cualquier momento.\r\n                    Te amo mi amor hermoso... </p>\r\n\r\n                    <center> <Button className=\"send-btn\" href=\"https://www.youtube.com/playlist?list=PLboh1AmEnsnmusupwVgrs0m_McUVjrV8Z\">Ir a las canciones</Button> <br/><br/><br/>\r\n                    <Link to=\"/home-main\"><Button className=\"send-btn\">Ir a pagina principal</Button></Link> </center>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Mind extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <h3>Mi amor...</h3>\r\n                    <a className=\"sentimientos-1\">\r\n                        Hay tantas cosas que quisiera decirte. Por eso he hecho todo esto para que puedas leer cada cosa que pienso, cada sentimiento y cada poema o pensamiento. Podría comenzar diciendo la razón de este regalo...\r\n                        Han sido 6 meses hermosos, tanto que he querido plasmar y convertir todos mis sentimientos en algo físico que esté conectado a mi corazón, conectado a cada palpitar de el y a cada neurona, cada sentimiento que\r\n                        sea capaz de generar y plasmar, he hecho esto por ti, para que todo lo hermoso se convierta en un recuerdo que quede con nosotros, un recuerdo que quede escrito en alguna parte. Y que, dependiendo de todo lo que me\r\n                        puedas hacer sentir este crezca más y más para poder albergar más cosas... <br></br> <br></br>\r\n\r\n                        Lo que más deseo es que mi corazón cada día crezca más por ti, por tus palabras, por nuestro amor, por nuestro futuro, y que todo en el puedas verlo y sentirlo, todo lo puedas ver y percibir como tanto quise, todo lo que tu\r\n                        belleza, perfección y existencia ocasionan en mi corazón de una forma tan bella y positiva, todo eso quiero que se quede aquí en mi corazón así como tu lo estarás siempre. <br></br><br></br>\r\n\r\n                        Te amo Mikhela Huapaya Valdivia, gracias por tanto y perdón por tan poco, gracias por estar conmigo, gracias por hacerme palpitar, funcionar y por hacerme valer la pena... Eres el milagro más hermoso que le ha pasado a mi vida y a mi universo..\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        Por favor... nunca cambies, nunca me dejes, nunca me abandones...\r\n\r\n                        <br></br><br></br>\r\n\r\n                        <Link to=\"/home-main\"><Button className=\"send-btn\">Ir a pagina principal</Button></Link>\r\n\r\n                    </a>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './pages/login';\nimport Home from './pages/home';\nimport logout from './pages/logout';\nimport Photos from './pages/photos';\nimport Songs from './pages/songs';\nimport Mind from './pages/mind';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/home-main\" component={Home} />\n          <Route exact path=\"/logout\" component={logout} />\n          <Route exact path=\"/photos\" component={Photos} />\n          <Route exact path=\"/songs\" component={Songs} />\n          <Route exact path=\"/mind\" component={Mind} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}